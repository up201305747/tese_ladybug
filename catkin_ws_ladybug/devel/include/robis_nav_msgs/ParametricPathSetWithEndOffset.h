// Generated by gencpp from file robis_nav_msgs/ParametricPathSetWithEndOffset.msg
// DO NOT EDIT!


#ifndef ROBIS_NAV_MSGS_MESSAGE_PARAMETRICPATHSETWITHENDOFFSET_H
#define ROBIS_NAV_MSGS_MESSAGE_PARAMETRICPATHSETWITHENDOFFSET_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <robis_nav_msgs/ParametricPathSet.h>

namespace robis_nav_msgs
{
template <class ContainerAllocator>
struct ParametricPathSetWithEndOffset_
{
  typedef ParametricPathSetWithEndOffset_<ContainerAllocator> Type;

  ParametricPathSetWithEndOffset_()
    : PathSet()
    , EndOffSet(0.0)  {
    }
  ParametricPathSetWithEndOffset_(const ContainerAllocator& _alloc)
    : PathSet(_alloc)
    , EndOffSet(0.0)  {
  (void)_alloc;
    }



   typedef  ::robis_nav_msgs::ParametricPathSet_<ContainerAllocator>  _PathSet_type;
  _PathSet_type PathSet;

   typedef double _EndOffSet_type;
  _EndOffSet_type EndOffSet;





  typedef boost::shared_ptr< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> const> ConstPtr;

}; // struct ParametricPathSetWithEndOffset_

typedef ::robis_nav_msgs::ParametricPathSetWithEndOffset_<std::allocator<void> > ParametricPathSetWithEndOffset;

typedef boost::shared_ptr< ::robis_nav_msgs::ParametricPathSetWithEndOffset > ParametricPathSetWithEndOffsetPtr;
typedef boost::shared_ptr< ::robis_nav_msgs::ParametricPathSetWithEndOffset const> ParametricPathSetWithEndOffsetConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace robis_nav_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'nav_msgs': ['/opt/ros/kinetic/share/nav_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/kinetic/share/actionlib_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'robis_nav_msgs': ['/home/user/catkin_ws_ladybug/src/robis_custom_msgs_stack/robis_nav_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> >
{
  static const char* value()
  {
    return "83867e7ae107f63f0046098d192de638";
  }

  static const char* value(const ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x83867e7ae107f63fULL;
  static const uint64_t static_value2 = 0x0046098d192de638ULL;
};

template<class ContainerAllocator>
struct DataType< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> >
{
  static const char* value()
  {
    return "robis_nav_msgs/ParametricPathSetWithEndOffset";
  }

  static const char* value(const ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> >
{
  static const char* value()
  {
    return "robis_nav_msgs/ParametricPathSet PathSet\n\
float64 EndOffSet\n\
\n\
================================================================================\n\
MSG: robis_nav_msgs/ParametricPathSet\n\
robis_nav_msgs/ParametricPath[] PathSet\n\
float32 AuxNum0\n\
\n\
================================================================================\n\
MSG: robis_nav_msgs/ParametricPath\n\
float32 Velocity\n\
string FrameId\n\
string CurveType\n\
float32[] Fx\n\
float32[] Fy\n\
int64 Id\n\
";
  }

  static const char* value(const ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.PathSet);
      stream.next(m.EndOffSet);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct ParametricPathSetWithEndOffset_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::robis_nav_msgs::ParametricPathSetWithEndOffset_<ContainerAllocator>& v)
  {
    s << indent << "PathSet: ";
    s << std::endl;
    Printer< ::robis_nav_msgs::ParametricPathSet_<ContainerAllocator> >::stream(s, indent + "  ", v.PathSet);
    s << indent << "EndOffSet: ";
    Printer<double>::stream(s, indent + "  ", v.EndOffSet);
  }
};

} // namespace message_operations
} // namespace ros

#endif // ROBIS_NAV_MSGS_MESSAGE_PARAMETRICPATHSETWITHENDOFFSET_H
